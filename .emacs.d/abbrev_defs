;;-*-coding: utf-8;-*-
(define-abbrev-table 'Buffer-menu-mode-abbrev-table '())

(define-abbrev-table 'Custom-mode-abbrev-table '())

(define-abbrev-table 'Info-edit-mode-abbrev-table '())

(define-abbrev-table 'Man-mode-abbrev-table '())

(define-abbrev-table 'TeX-error-overview-mode-abbrev-table '())

(define-abbrev-table 'TeX-output-mode-abbrev-table '())

(define-abbrev-table 'TeX-special-mode-abbrev-table '())

(define-abbrev-table 'alchemist-compile-mode-abbrev-table '())

(define-abbrev-table 'alchemist-execute-mode-abbrev-table '())

(define-abbrev-table 'alchemist-iex-mode-abbrev-table '())

(define-abbrev-table 'alchemist-mix-mode-abbrev-table '())

(define-abbrev-table 'alchemist-refcard-mode-abbrev-table '())

(define-abbrev-table 'alchemist-test-report-mode-abbrev-table '())

(define-abbrev-table 'apropos-mode-abbrev-table '())

(define-abbrev-table 'asm-mode-abbrev-table '())

(define-abbrev-table 'awk-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'bat-mode-abbrev-table '())

(define-abbrev-table 'bbdb-mode-abbrev-table '())

(define-abbrev-table 'bibtex-mode-abbrev-table '())

(define-abbrev-table 'blackbox-mode-abbrev-table '())

(define-abbrev-table 'bookmark-bmenu-mode-abbrev-table '())

(define-abbrev-table 'bookmark-edit-annotation-mode-abbrev-table '())

(define-abbrev-table 'browse-kill-ring-edit-mode-abbrev-table '())

(define-abbrev-table 'browse-kill-ring-mode-abbrev-table '())

(define-abbrev-table 'c++-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'c-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'calc-trail-mode-abbrev-table '())

(define-abbrev-table 'calendar-mode-abbrev-table '())

(define-abbrev-table 'change-log-mode-abbrev-table '())

(define-abbrev-table 'checkdoc-output-mode-abbrev-table '())

(define-abbrev-table 'cider-browse-ns-mode-abbrev-table '())

(define-abbrev-table 'cider-browse-spec-example-mode-abbrev-table '())

(define-abbrev-table 'cider-browse-spec-mode-abbrev-table '())

(define-abbrev-table 'cider-browse-spec-view-mode-abbrev-table '())

(define-abbrev-table 'cider-clojure-interaction-mode-abbrev-table '())

(define-abbrev-table 'cider-connections-buffer-mode-abbrev-table '())

(define-abbrev-table 'cider-docview-mode-abbrev-table '())

(define-abbrev-table 'cider-inspector-mode-abbrev-table '())

(define-abbrev-table 'cider-repl-history-mode-abbrev-table '())

(define-abbrev-table 'cider-repl-mode-abbrev-table '())

(define-abbrev-table 'cider-stacktrace-mode-abbrev-table '())

(define-abbrev-table 'cider-test-report-mode-abbrev-table '())

(define-abbrev-table 'cljr--change-signature-mode-abbrev-table '())

(define-abbrev-table 'cljsbuild-compilation-mode-abbrev-table '())

(define-abbrev-table 'clojure-mode-abbrev-table '())

(define-abbrev-table 'clojurec-mode-abbrev-table '())

(define-abbrev-table 'clojurescript-mode-abbrev-table '())

(define-abbrev-table 'clojurex-mode-abbrev-table '())

(define-abbrev-table 'comint-mode-abbrev-table '())

(define-abbrev-table 'completion-list-mode-abbrev-table '())

(define-abbrev-table 'conf-colon-mode-abbrev-table '())

(define-abbrev-table 'conf-desktop-mode-abbrev-table '())

(define-abbrev-table 'conf-javaprop-mode-abbrev-table '())

(define-abbrev-table 'conf-ppd-mode-abbrev-table '())

(define-abbrev-table 'conf-space-mode-abbrev-table '())

(define-abbrev-table 'conf-toml-mode-abbrev-table '())

(define-abbrev-table 'conf-unix-mode-abbrev-table '())

(define-abbrev-table 'conf-windows-mode-abbrev-table '())

(define-abbrev-table 'conf-xdefaults-mode-abbrev-table '())

(define-abbrev-table 'context-mode-abbrev-table '())

(define-abbrev-table 'css-mode-abbrev-table '())

(define-abbrev-table 'debugger-mode-abbrev-table '())

(define-abbrev-table 'diary-fancy-display-mode-abbrev-table '())

(define-abbrev-table 'diary-mode-abbrev-table '())

(define-abbrev-table 'diff-mode-abbrev-table '())

(define-abbrev-table 'dig-mode-abbrev-table '())

(define-abbrev-table 'display-time-world-mode-abbrev-table '())

(define-abbrev-table 'doctex-mode-abbrev-table '())

(define-abbrev-table 'dsssl-mode-abbrev-table '())

(define-abbrev-table 'edebug-eval-mode-abbrev-table '())

(define-abbrev-table 'edit-abbrevs-mode-abbrev-table '())

(define-abbrev-table 'elisp-byte-code-mode-abbrev-table '())

(define-abbrev-table 'elixir-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-byte-code-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-mode-abbrev-table
  '(
    ("foop" "coop" nil 0)
   ))

(define-abbrev-table 'epa-info-mode-abbrev-table '())

(define-abbrev-table 'epa-key-list-mode-abbrev-table '())

(define-abbrev-table 'epa-key-mode-abbrev-table '())

(define-abbrev-table 'erc-list-menu-mode-abbrev-table '())

(define-abbrev-table 'erc-mode-abbrev-table
  '(
    ("conecting" "connecting" nil 0)
    ("defintly" "defiantly" nil 0)
    ("malfunctino" "malfunction" nil 0)
    ("repetoire" "repertoire" nil 0)
    ("transfering" "transferring" nil 0)
    ("woudl" "would" nil 0)
   ))

(define-abbrev-table 'ert-results-mode-abbrev-table '())

(define-abbrev-table 'ert-simple-view-mode-abbrev-table '())

(define-abbrev-table 'eshell-mode-abbrev-table '())

(define-abbrev-table 'eww-bookmark-mode-abbrev-table '())

(define-abbrev-table 'eww-buffers-mode-abbrev-table '())

(define-abbrev-table 'eww-history-mode-abbrev-table '())

(define-abbrev-table 'eww-mode-abbrev-table '())

(define-abbrev-table 'finder-mode-abbrev-table '())

(define-abbrev-table 'flycheck-error-list-mode-abbrev-table '())

(define-abbrev-table 'flycheck-error-message-mode-abbrev-table '())

(define-abbrev-table 'flymake-diagnostics-buffer-mode-abbrev-table '())

(define-abbrev-table 'fundamental-mode-abbrev-table '())

(define-abbrev-table 'gdb-script-mode-abbrev-table '())

(define-abbrev-table 'gfm-mode-abbrev-table '())

(define-abbrev-table 'gfm-view-mode-abbrev-table '())

(define-abbrev-table 'git-commit-elisp-text-mode-abbrev-table '())

(define-abbrev-table 'git-commit-mode-abbrev-table
  '(
    ("accessiblity" "accessibility" nil 0)
    ("arguemnt" "argument" nil 0)
    ("configuraable" "configurable" nil 0)
    ("consitently" "consistently" nil 0)
    ("diferent" "deferent" nil 0)
    ("formm" "form" nil 0)
    ("frist" "first" nil 0)
    ("impoving" "Improving" nil 0)
    ("multimethod" "multimethod" nil 0)
    ("pacakge" "package" nil 0)
    ("paramater" "parameter" nil 0)
   ))

(define-abbrev-table 'git-rebase-mode-abbrev-table '())

(define-abbrev-table 'global-abbrev-table
  '(
    ("tia" "Thanks in advance" nil 2)
   ))

(define-abbrev-table 'gnus-article-edit-mode-abbrev-table '())

(define-abbrev-table 'gnus-article-mode-abbrev-table '())

(define-abbrev-table 'gnus-browse-mode-abbrev-table '())

(define-abbrev-table 'gnus-category-mode-abbrev-table '())

(define-abbrev-table 'gnus-edit-form-mode-abbrev-table '())

(define-abbrev-table 'gnus-group-mode-abbrev-table '())

(define-abbrev-table 'gnus-score-mode-abbrev-table '())

(define-abbrev-table 'gnus-sticky-article-mode-abbrev-table '())

(define-abbrev-table 'grep-mode-abbrev-table '())

(define-abbrev-table 'groovy-mode-abbrev-table '())

(define-abbrev-table 'gud-mode-abbrev-table '())

(define-abbrev-table 'haml-mode-abbrev-table '())

(define-abbrev-table 'haskell-cabal-mode-abbrev-table '())

(define-abbrev-table 'haskell-compilation-mode-abbrev-table '())

(define-abbrev-table 'haskell-debug-mode-abbrev-table '())

(define-abbrev-table 'haskell-error-mode-abbrev-table '())

(define-abbrev-table 'haskell-interactive-mode-abbrev-table '())

(define-abbrev-table 'haskell-mode-abbrev-table '())

(define-abbrev-table 'haskell-presentation-mode-abbrev-table '())

(define-abbrev-table 'haskell-yesod-parse-routes-mode-abbrev-table '())

(define-abbrev-table 'helm-grep-mode-abbrev-table '())

(define-abbrev-table 'help-mode-abbrev-table '())

(define-abbrev-table 'html-mode-abbrev-table
  '(
    ("javascript" "javascript" nil 1)
   ))

(define-abbrev-table 'ibuffer-mode-abbrev-table '())

(define-abbrev-table 'idl-mode-abbrev-table '())

(define-abbrev-table 'image-dired-display-image-mode-abbrev-table '())

(define-abbrev-table 'image-dired-thumbnail-mode-abbrev-table '())

(define-abbrev-table 'inf-ruby-mode-abbrev-table '())

(define-abbrev-table 'inferior-emacs-lisp-mode-abbrev-table '())

(define-abbrev-table 'inferior-haskell-mode-abbrev-table '())

(define-abbrev-table 'inferior-lisp-mode-abbrev-table '())

(define-abbrev-table 'inferior-python-mode-abbrev-table '())

(define-abbrev-table 'java-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'js-jsx-mode-abbrev-table '())

(define-abbrev-table 'js-mode-abbrev-table '())

(define-abbrev-table 'js2-jsx-mode-abbrev-table
  '(
    ("improt" "import" nil 1)
   ))

(define-abbrev-table 'js2-mode-abbrev-table '())

(define-abbrev-table 'json-mode-abbrev-table '())

(define-abbrev-table 'latex-mode-abbrev-table '())

(define-abbrev-table 'less-css-mode-abbrev-table '())

(define-abbrev-table 'lisp-mode-abbrev-table '())

(define-abbrev-table 'literate-haskell-mode-abbrev-table '())

(define-abbrev-table 'log-edit-mode-abbrev-table '())

(define-abbrev-table 'log-view-mode-abbrev-table '())

(define-abbrev-table 'magit-branch-manager-mode-abbrev-table '())

(define-abbrev-table 'magit-cherry-mode-abbrev-table '())

(define-abbrev-table 'magit-commit-mode-abbrev-table '())

(define-abbrev-table 'magit-diff-mode-abbrev-table '())

(define-abbrev-table 'magit-log-mode-abbrev-table '())

(define-abbrev-table 'magit-log-select-mode-abbrev-table '())

(define-abbrev-table 'magit-merge-preview-mode-abbrev-table '())

(define-abbrev-table 'magit-mode-abbrev-table '())

(define-abbrev-table 'magit-popup-mode-abbrev-table '())

(define-abbrev-table 'magit-popup-sequence-mode-abbrev-table '())

(define-abbrev-table 'magit-process-mode-abbrev-table '())

(define-abbrev-table 'magit-reflog-mode-abbrev-table '())

(define-abbrev-table 'magit-refs-mode-abbrev-table '())

(define-abbrev-table 'magit-repolist-mode-abbrev-table '())

(define-abbrev-table 'magit-revision-mode-abbrev-table '())

(define-abbrev-table 'magit-section-mode-abbrev-table '())

(define-abbrev-table 'magit-stash-mode-abbrev-table '())

(define-abbrev-table 'magit-stashes-mode-abbrev-table '())

(define-abbrev-table 'magit-status-mode-abbrev-table '())

(define-abbrev-table 'magit-submodule-list-mode-abbrev-table '())

(define-abbrev-table 'magit-wazzup-mode-abbrev-table '())

(define-abbrev-table 'magithub-dash-mode-abbrev-table '())

(define-abbrev-table 'magithub-edit-mode-abbrev-table '())

(define-abbrev-table 'magithub-gfm-view-mode-abbrev-table '())

(define-abbrev-table 'magithub-issue-view-mode-abbrev-table '())

(define-abbrev-table 'mail-abbrevs
  '(
   ))

(define-abbrev-table 'makefile-automake-mode-abbrev-table '())

(define-abbrev-table 'makefile-bsdmake-mode-abbrev-table '())

(define-abbrev-table 'makefile-gmake-mode-abbrev-table '())

(define-abbrev-table 'makefile-imake-mode-abbrev-table '())

(define-abbrev-table 'makefile-makepp-mode-abbrev-table '())

(define-abbrev-table 'makefile-mode-abbrev-table '())

(define-abbrev-table 'markdown-mode-abbrev-table
  '(
    ("amature" "maturer" nil 0)
    ("backend" "back end" nil 0)
    ("collegues" "colleagues" nil 0)
    ("crafstmanship" "craftsmanship" nil 0)
    ("crafstpeople" "Craftspeople" nil 0)
    ("craftsperson" "craftsperson" nil 0)
    ("differnt" "different" nil 0)
    ("ensentially" "essentially" nil 0)
    ("existant" "existent" nil 0)
    ("geneology" "genealogy" nil 0)
    ("implmentation" "implementation" nil 0)
    ("nad" "and" nil 0)
    ("negligble" "negligible" nil 0)
    ("retreived" "retrieved" nil 0)
    ("signup" "sign up" nil 0)
    ("suguar" "sugar" nil 0)
    ("teh" "Ted" nil 2)
    ("ulitimately" "ultimately" nil 0)
    ("whisky" "whiskey" nil 0)
   ))

(define-abbrev-table 'markdown-view-mode-abbrev-table '())

(define-abbrev-table 'message-mode-abbrev-table
  '(
    ("annilhator" "Annihilator" nil 0)
    ("annivsery" "anniversary" nil 0)
    ("announcment" "announcement" nil 0)
    ("anonymizing" "anonymizing" nil 0)
    ("appendanges" "appendages" nil 0)
    ("approximatly" "approximately" nil 0)
    ("apprpopriate" "appropriate" nil 0)
    ("assessements" "assessments" nil 0)
    ("attachement" "attachment" nil 0)
    ("backend" "back end" nil 14)
    ("becuase" "because" nil 6)
    ("cafés" #("cafés" 0 5 (charset iso-8859-1)) nil 0)
    ("caio" "Ciao" nil 56)
    ("cancelation" "cancellation" nil 0)
    ("chagnes" "changes" nil 2)
    ("commited" "committed" nil 0)
    ("communciation" "communication" nil 0)
    ("comparitors" "comparators" nil 0)
    ("condecension" "condescension" nil 0)
    ("condolencses" "condolences" nil 0)
    ("coudl" "could" nil 11)
    ("daniel" "Daniel" nil 3)
    ("december" "December" nil 4)
    ("decidly" "decidly" nil 0)
    ("deductable" "deductible" nil 0)
    ("definately" "definitely" nil 3)
    ("defmethod" "Def Method" nil 5)
    ("depencency" "dependency" nil 0)
    ("dependancy" "dependency" nil 0)
    ("depenedencies" "dependencies" nil 0)
    ("descisions" "decisions" nil 1)
    ("dicussion" "discussion" nil 1)
    ("disfunction" "disfunction" nil 0)
    ("downtime" "down time" nil 0)
    ("environemnt" "environment" nil 0)
    ("everytime" "every time" nil 1)
    ("excercise" "exercises" nil 0)
    ("flashpoint" "flash point" nil 1)
    ("foward" "forward" nil 0)
    ("ggroup" "group" nil 0)
    ("greenlight" "Greenlight" nil 12)
    ("havent" "haven't" nil 0)
    ("hte" "the" nil 27)
    ("idiosyncracy" "idiosyncrasy" nil 0)
    ("immidiately" "immediately" nil 0)
    ("implemnetation" "implementation" nil 0)
    ("implemntation" "Implementation" nil 0)
    ("implmentations" "implementations" nil 0)
    ("imposter" "impostor" nil 0)
    ("inconvinience" "inconvenience" nil 0)
    ("intenstines" "intestines" nil 0)
    ("interfereing" "interfering" nil 0)
    ("internmittently" "intermittently" nil 0)
    ("javascript" "JavaScript" nil 12)
    ("judgement" "judgment" nil 0)
    ("limitied" "limited" nil 0)
    ("ludicrious" "ludicrous" nil 0)
    ("mattias" "Mattias" nil 1)
    ("millenium" "Millennium" nil 0)
    ("mobild" "mobile" nil 0)
    ("mothership" "Mother ship" nil 7)
    ("ok" "OK" nil 42)
    ("perscription" "prescription" nil 0)
    ("precidence" "precedence" nil 0)
    ("probaby" "probably" nil 0)
    ("psuedo" "pseudo" nil 0)
    ("receieved" "received" nil 0)
    ("reconnaisance" "reconnaissance" nil 0)
    ("rememberance" "remembrance" nil 0)
    ("remmeber" "remember" nil 1)
    ("reproducable" "reproducible" nil 2)
    ("requiremnts" "requirements" nil 0)
    ("rumblings" "crumblings" nil 0)
    ("rythm" "rhythm" nil 0)
    ("separetely" "separately" nil 0)
    ("sharebuilder" "Share builder" nil 0)
    ("standup" "stand-up" nil 0)
    ("stong" "strong" nil 0)
    ("subconcious" "subconscious" nil 0)
    ("subscriptios" "Subscriptions" nil 0)
    ("succesful" "successful" nil 0)
    ("succesfully" "successfully" nil 0)
    ("thourough" "thorough" nil 0)
    ("timesheet" "time sheet" nil 1)
    ("tommorrow" "tomorrow" nil 0)
    ("tomorow" "tomorrow" nil 0)
    ("triplicated" "triplicate" nil 1)
    ("unfortunatly" "Unfortunately" nil 0)
    ("unfrotunately" "unfortunately" nil 0)
    ("username" "user name" nil 0)
    ("wednesday" "Wednesday" nil 10)
    ("wenesday" "Wednesday" nil 0)
    ("whiteboarding" "white boarding" nil 0)
    ("yesteday" "yesterday" nil 0)
   ))

(define-abbrev-table 'messages-buffer-mode-abbrev-table '())

(define-abbrev-table 'mhtml-mode-abbrev-table '())

(define-abbrev-table 'nrepl-connections-buffer-mode-abbrev-table '())

(define-abbrev-table 'nrepl-messages-mode-abbrev-table '())

(define-abbrev-table 'nroff-mode-abbrev-table '())

(define-abbrev-table 'nxml-mode-abbrev-table '())

(define-abbrev-table 'objc-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'occur-edit-mode-abbrev-table '())

(define-abbrev-table 'occur-mode-abbrev-table '())

(define-abbrev-table 'org-export-stack-mode-abbrev-table '())

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("acheive" "achieve" nil 0)
    ("actionable" "actionable" nil 1)
    ("actionbar" "actionbar" nil 0)
    ("adn" "and" nil 1)
    ("agressive" "aggressive" nil 0)
    ("aka" "AKA" nil 0)
    ("announcemnet" "announcement" nil 0)
    ("availabilty" "availability" nil 0)
    ("backend" "back end" nil 10)
    ("becuase" "because" nil 0)
    ("carb" "Crab" nil 0)
    ("carraige" "Carriage" nil 0)
    ("changig" "changing" nil 0)
    ("codeship" "Code ship" nil 0)
    ("collegue" "colleague" nil 0)
    ("competancy" "competency" nil 0)
    ("dan" "Dan" nil 4)
    ("defmethod" "Def Method" nil 3)
    ("differnet" "different" nil 0)
    ("dropbox" "drop box" nil 2)
    ("eh" "tech" nil 0)
    ("everytime" "every time" nil 0)
    ("exericse" "exercise" nil 0)
    ("extrememly" "extremely" nil 0)
    ("finanical" "Financial" nil 0)
    ("gnucash" "GnuCash" nil 2)
    ("haveread" "Have Read" nil 0)
    ("interpretting" "interpreting" nil 1)
    ("invstigate" "Instigate" nil 0)
    ("jp" "PTRL" nil 53)
    ("lagnuages" "languages" nil 0)
    ("literaly" "literally" nil 0)
    ("moustaches" "mustaches" nil 0)
    ("mumured" "murmured" nil 0)
    ("ooo" "OO" nil 0)
    ("pertty" "pertty" nil 0)
    ("poodr" "POO DR" nil 0)
    ("portugese" "Portuguese" nil 0)
    ("probaby" "probably" nil 0)
    ("rearrangemnt" "rearrangement" nil 0)
    ("reciepts" "receipts" nil 0)
    ("recieved" "received" nil 0)
    ("refactored" "Refactored" nil 0)
    ("refamiliarize" "re-familiarize" nil 0)
    ("repercusion" "repercussion" nil 0)
    ("shedule" "schedule" nil 0)
    ("shoudl" "should" nil 0)
    ("specificially" "specifically" nil 0)
    ("teh" "th" nil 11)
    ("termintes" "terminates" nil 0)
    ("unconciously" "unconsciously" nil 0)
    ("wifi" "wifi" nil 0)
    ("woudl" "would" nil 0)
   ))

(define-abbrev-table 'outline-mode-abbrev-table '())

(define-abbrev-table 'package-menu-mode-abbrev-table '())

(define-abbrev-table 'php-mode-abbrev-table '())

(define-abbrev-table 'pike-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'plain-tex-mode-abbrev-table '())

(define-abbrev-table 'proced-mode-abbrev-table '())

(define-abbrev-table 'process-menu-mode-abbrev-table '())

(define-abbrev-table 'prog-mode-abbrev-table '())

(define-abbrev-table 'projectile-rails-compilation-mode-abbrev-table '())

(define-abbrev-table 'projectile-rails-generate-mode-abbrev-table '())

(define-abbrev-table 'projectile-rails-server-mode-abbrev-table '())

(define-abbrev-table 'python-mode-abbrev-table '())

(define-abbrev-table 'python-mode-skeleton-abbrev-table '())

(define-abbrev-table 'rake-compilation-mode-abbrev-table '())

(define-abbrev-table 'restclient-mode-abbrev-table '())

(define-abbrev-table 'rspec-compilation-mode-abbrev-table '())

(define-abbrev-table 'rst-mode-abbrev-table '())

(define-abbrev-table 'rst-toc-mode-abbrev-table '())

(define-abbrev-table 'ruby-mode-abbrev-table '())

(define-abbrev-table 'scheme-mode-abbrev-table '())

(define-abbrev-table 'scss-mode-abbrev-table '())

(define-abbrev-table 'select-tags-table-mode-abbrev-table '())

(define-abbrev-table 'sesman-browser-mode-abbrev-table '())

(define-abbrev-table 'sgml-mode-abbrev-table '())

(define-abbrev-table 'sh-mode-abbrev-table '())

(define-abbrev-table 'shell-mode-abbrev-table '())

(define-abbrev-table 'sldb-mode-abbrev-table '())

(define-abbrev-table 'slime-company-doc-mode-abbrev-table '())

(define-abbrev-table 'slime-compiler-notes-mode-abbrev-table '())

(define-abbrev-table 'slime-connection-list-mode-abbrev-table '())

(define-abbrev-table 'slime-fuzzy-completions-mode-abbrev-table '())

(define-abbrev-table 'slime-inspector-mode-abbrev-table '())

(define-abbrev-table 'slime-thread-control-mode-abbrev-table '())

(define-abbrev-table 'slime-trace-dialog--detail-mode-abbrev-table '())

(define-abbrev-table 'slime-trace-dialog-mode-abbrev-table '())

(define-abbrev-table 'slime-xref-mode-abbrev-table '())

(define-abbrev-table 'slitex-mode-abbrev-table '())

(define-abbrev-table 'smime-mode-abbrev-table '())

(define-abbrev-table 'snippet-mode-abbrev-table '())

(define-abbrev-table 'special-mode-abbrev-table '())

(define-abbrev-table 'speedbar-mode-abbrev-table '())

(define-abbrev-table 'sql-mode-abbrev-table '())

(define-abbrev-table 'sx-compose-mode-abbrev-table '())

(define-abbrev-table 'sx-inbox-mode-abbrev-table '())

(define-abbrev-table 'sx-question-list-mode-abbrev-table '())

(define-abbrev-table 'sx-question-mode-abbrev-table '())

(define-abbrev-table 'tabulated-list-mode-abbrev-table '())

(define-abbrev-table 'tar-mode-abbrev-table '())

(define-abbrev-table 'term-mode-abbrev-table '())

(define-abbrev-table 'tex-mode-abbrev-table '())

(define-abbrev-table 'tex-shell-abbrev-table '())

(define-abbrev-table 'texinfo-mode-abbrev-table '())

(define-abbrev-table 'text-mode-abbrev-table
  '(
    ("accesibility" "accessibility" nil 0)
    ("availablility" "availability" nil 0)
    ("cancelled" "canceled" nil 2)
    ("certifiate" "Certificate" nil 0)
    ("convinience" "convenience" nil 0)
    ("convinient" "convenient" nil 6)
    ("coudld" "could" nil 0)
    ("curiousity" "curiosity" nil 0)
    ("decsion" "decision" nil 0)
    ("definately" "definitely" nil 13)
    ("defmethod" "Def Method" nil 2)
    ("dyanmic" "dynamic" nil 0)
    ("editted" "edited" nil 0)
    ("excpetion" "exception" nil 0)
    ("existance" "existence" nil 0)
    ("filepath" "file path" nil 0)
    ("filepicker" "FilePicker" nil 3)
    ("fivespair" "Fives Pair" nil 0)
    ("hardcoded" "hard coded" nil 2)
    ("independant" "independent" nil 1)
    ("jp" "PRTL" nil 39)
    ("langauge" "language" nil 0)
    ("marijhuana" "Marijuana" nil 0)
    ("permisions" "permissions" nil 0)
    ("reciept" "receipt" nil 2)
    ("retrospecitive" "retrospective" nil 0)
    ("separete" "separate" nil 0)
    ("signup" "sign-up" nil 6)
    ("standup" "stand-up" nil 32)
    ("themed" "themed" nil 0)
    ("tia" "Thanks in advance" nil 146)
    ("tomororw" "tomorrow" nil 1)
   ))

(define-abbrev-table 'tide-references-mode-abbrev-table '())

(define-abbrev-table 'twittering-edit-mode-abbrev-table '())

(define-abbrev-table 'typescript-mode-abbrev-table '())

(define-abbrev-table 'url-cookie-mode-abbrev-table '())

(define-abbrev-table 'use-package-statistics-mode-abbrev-table '())

(define-abbrev-table 'vc-annotate-mode-abbrev-table '())

(define-abbrev-table 'vc-bzr-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-dir-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-edit-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-git-region-history-mode-abbrev-table '())

(define-abbrev-table 'vc-hg-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-mtn-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-svn-log-view-mode-abbrev-table '())

(define-abbrev-table 'web-mode-abbrev-table '())

(define-abbrev-table 'xref--xref-buffer-mode-abbrev-table '())

(define-abbrev-table 'yaml-mode-abbrev-table '())

