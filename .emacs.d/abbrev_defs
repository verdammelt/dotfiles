;;-*-coding: utf-8;-*-
(define-abbrev-table 'erc-mode-abbrev-table
  '(
    ("conecting" "connecting" nil :count 0)
    ("defintly" "defiantly" nil :count 0)
    ("malfunctino" "malfunction" nil :count 0)
    ("repetoire" "repertoire" nil :count 0)
    ("transfering" "transferring" nil :count 0)
    ("woudl" "would" nil :count 0)
   ))

(define-abbrev-table 'forge-post-mode-abbrev-table
  '(
    ("organazation" "organization" nil :count 0)
   ))

(define-abbrev-table 'git-commit-mode-abbrev-table
  '(
    ("accessiblity" "accessibility" nil :count 0)
    ("arguemnt" "argument" nil :count 0)
    ("configuraable" "configurable" nil :count 0)
    ("consitently" "consistently" nil :count 0)
    ("diferent" "deferent" nil :count 0)
    ("formm" "form" nil :count 0)
    ("frist" "first" nil :count 0)
    ("impoving" "Improving" nil :count 0)
    ("multimethod" "multimethod" nil :count 0)
    ("pacakge" "package" nil :count 0)
    ("paramater" "parameter" nil :count 0)
   ))

(define-abbrev-table 'html-mode-abbrev-table
  '(
    ("javascript" "javascript" nil :count 1)
   ))

(define-abbrev-table 'js2-jsx-mode-abbrev-table
  '(
    ("improt" "import" nil :count 1)
   ))

(define-abbrev-table 'latex-mode-abbrev-table
  '(
    ("posessor's" "possessor's" nil :count 0)
   ))

(define-abbrev-table 'markdown-mode-abbrev-table
  '(
    ("amature" "maturer" nil :count 0)
    ("backend" "back end" nil :count 0)
    ("collegues" "colleagues" nil :count 0)
    ("crafstmanship" "craftsmanship" nil :count 0)
    ("crafstpeople" "Craftspeople" nil :count 0)
    ("craftsperson" "craftsperson" nil :count 0)
    ("differnt" "different" nil :count 0)
    ("ensentially" "essentially" nil :count 0)
    ("existant" "existent" nil :count 0)
    ("geneology" "genealogy" nil :count 0)
    ("implmentation" "implementation" nil :count 0)
    ("nad" "and" nil :count 0)
    ("negligble" "negligible" nil :count 0)
    ("retreived" "retrieved" nil :count 0)
    ("signup" "sign up" nil :count 0)
    ("suguar" "sugar" nil :count 0)
    ("ulitimately" "ultimately" nil :count 0)
    ("whisky" "whiskey" nil :count 0)
   ))

(define-abbrev-table 'message-mode-abbrev-table
  '(
    ("annilhator" "Annihilator" nil :count 0)
    ("annivsery" "anniversary" nil :count 0)
    ("announcment" "announcement" nil :count 0)
    ("anonymizing" "anonymizing" nil :count 0)
    ("appendanges" "appendages" nil :count 0)
    ("approximatly" "approximately" nil :count 0)
    ("apprpopriate" "appropriate" nil :count 0)
    ("assessements" "assessments" nil :count 0)
    ("attachement" "attachment" nil :count 0)
    ("backend" "back end" nil :count 14)
    ("becuase" "because" nil :count 6)
    ("caio" "Ciao" nil :count 58)
    ("cancelation" "cancellation" nil :count 0)
    ("chagnes" "changes" nil :count 2)
    ("commited" "committed" nil :count 0)
    ("communciation" "communication" nil :count 0)
    ("comparitors" "comparators" nil :count 0)
    ("condecension" "condescension" nil :count 0)
    ("condolencses" "condolences" nil :count 0)
    ("coudl" "could" nil :count 11)
    ("daniel" "Daniel" nil :count 3)
    ("december" "December" nil :count 4)
    ("decidly" "decidly" nil :count 0)
    ("deductable" "deductible" nil :count 0)
    ("definately" "definitely" nil :count 3)
    ("depencency" "dependency" nil :count 0)
    ("dependancy" "dependency" nil :count 0)
    ("depenedencies" "dependencies" nil :count 0)
    ("descisions" "decisions" nil :count 1)
    ("dicussion" "discussion" nil :count 1)
    ("disfunction" "disfunction" nil :count 0)
    ("downtime" "down time" nil :count 0)
    ("environemnt" "environment" nil :count 0)
    ("everytime" "every time" nil :count 1)
    ("excercise" "exercises" nil :count 0)
    ("flashpoint" "flash point" nil :count 1)
    ("foward" "forward" nil :count 0)
    ("ggroup" "group" nil :count 0)
    ("greenlight" "Greenlight" nil :count 12)
    ("havent" "haven't" nil :count 0)
    ("hte" "the" nil :count 27)
    ("idiosyncracy" "idiosyncrasy" nil :count 0)
    ("immidiately" "immediately" nil :count 0)
    ("implemnetation" "implementation" nil :count 0)
    ("implemntation" "Implementation" nil :count 0)
    ("implmentations" "implementations" nil :count 0)
    ("imposter" "impostor" nil :count 0)
    ("inconvinience" "inconvenience" nil :count 0)
    ("intenstines" "intestines" nil :count 0)
    ("interfereing" "interfering" nil :count 0)
    ("internmittently" "intermittently" nil :count 0)
    ("javascript" "JavaScript" nil :count 12)
    ("judgement" "judgment" nil :count 0)
    ("limitied" "limited" nil :count 0)
    ("ludicrious" "ludicrous" nil :count 0)
    ("mattias" "Mattias" nil :count 1)
    ("millenium" "Millennium" nil :count 0)
    ("mobild" "mobile" nil :count 0)
    ("ok" "OK" nil :count 44)
    ("perscription" "prescription" nil :count 0)
    ("precidence" "precedence" nil :count 0)
    ("probaby" "probably" nil :count 0)
    ("psuedo" "pseudo" nil :count 0)
    ("receieved" "received" nil :count 0)
    ("reconnaisance" "reconnaissance" nil :count 0)
    ("rememberance" "remembrance" nil :count 0)
    ("remmeber" "remember" nil :count 1)
    ("reproducable" "reproducible" nil :count 2)
    ("requiremnts" "requirements" nil :count 0)
    ("rumblings" "crumblings" nil :count 0)
    ("rythm" "rhythm" nil :count 0)
    ("separetely" "separately" nil :count 0)
    ("sharebuilder" "Share builder" nil :count 0)
    ("standup" "stand-up" nil :count 0)
    ("stong" "strong" nil :count 0)
    ("subconcious" "subconscious" nil :count 0)
    ("subscriptios" "Subscriptions" nil :count 0)
    ("succesful" "successful" nil :count 0)
    ("succesfully" "successfully" nil :count 0)
    ("thourough" "thorough" nil :count 0)
    ("timesheet" "time sheet" nil :count 1)
    ("tommorrow" "tomorrow" nil :count 0)
    ("tomorow" "tomorrow" nil :count 0)
    ("triplicated" "triplicate" nil :count 1)
    ("unfortunatly" "Unfortunately" nil :count 0)
    ("unfrotunately" "unfortunately" nil :count 0)
    ("username" "user name" nil :count 0)
    ("wednesday" "Wednesday" nil :count 10)
    ("wenesday" "Wednesday" nil :count 0)
    ("whiteboarding" "white boarding" nil :count 0)
    ("yesteday" "yesterday" nil :count 0)
   ))

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("abandonded" "abandoned" nil :count 0)
    ("acheive" "achieve" nil :count 0)
    ("actionable" "actionable" nil :count 2)
    ("actionbar" "actionbar" nil :count 0)
    ("adn" "and" nil :count 2)
    ("agressive" "aggressive" nil :count 0)
    ("aka" "AKA" nil :count 0)
    ("announcemnet" "announcement" nil :count 0)
    ("availabilty" "availability" nil :count 0)
    ("backend" "back end" nil :count 10)
    ("becuase" "because" nil :count 0)
    ("carb" "Crab" nil :count 0)
    ("carraige" "Carriage" nil :count 0)
    ("chagnes" "changes" nil :count 0)
    ("changig" "changing" nil :count 0)
    ("codeship" "Code ship" nil :count 0)
    ("collegue" "colleague" nil :count 0)
    ("competancy" "competency" nil :count 0)
    ("defm" "Def Method" nil :count 33)
    ("desiger" "designer" nil :count 0)
    ("differnet" "different" nil :count 0)
    ("dropbox" "drop box" nil :count 2)
    ("eh" "tech" nil :count 0)
    ("entirity" "entirety" nil :count 0)
    ("everytime" "every time" nil :count 0)
    ("excpetions" "Exceptions" nil :count 0)
    ("exericse" "exercise" nil :count 0)
    ("extrememly" "extremely" nil :count 0)
    ("finanical" "Financial" nil :count 0)
    ("gnucash" "GnuCash" nil :count 3)
    ("haveread" "Have Read" nil :count 0)
    ("internesting" "interesting" nil :count 0)
    ("interpretting" "interpreting" nil :count 2)
    ("invstigate" "Instigate" nil :count 0)
    ("jp" "PTRL" nil :count 53)
    ("lagnuages" "languages" nil :count 0)
    ("literaly" "literally" nil :count 0)
    ("moustaches" "mustaches" nil :count 0)
    ("mumured" "murmured" nil :count 0)
    ("portugese" "Portuguese" nil :count 0)
    ("probaby" "probably" nil :count 0)
    ("rearrangemnt" "rearrangement" nil :count 0)
    ("reciepts" "receipts" nil :count 0)
    ("recieved" "received" nil :count 1)
    ("refactored" "Refactored" nil :count 0)
    ("refamiliarize" "re-familiarize" nil :count 0)
    ("repercusion" "repercussion" nil :count 0)
    ("resposibility" "responsibility" nil :count 0)
    ("scrollbars" "scroll bars" nil :count 0)
    ("shedule" "schedule" nil :count 0)
    ("shoudl" "should" nil :count 2)
    ("somehting" "something" nil :count 0)
    ("specificially" "specifically" nil :count 0)
    ("teh" "th" nil :count 19)
    ("termintes" "terminates" nil :count 0)
    ("unconciously" "unconsciously" nil :count 0)
    ("understanble" "understandable" nil :count 0)
    ("webpages" "web pages" nil :count 0)
    ("wifi" "wifi" nil :count 0)
    ("woudl" "would" nil :count 0)
   ))

(define-abbrev-table 'text-mode-abbrev-table
  '(
    ("accesibility" "accessibility" nil :count 0)
    ("availablility" "availability" nil :count 0)
    ("cancelled" "canceled" nil :count 2)
    ("certifiate" "Certificate" nil :count 0)
    ("convinience" "convenience" nil :count 0)
    ("convinient" "convenient" nil :count 6)
    ("coudld" "could" nil :count 0)
    ("curiousity" "curiosity" nil :count 0)
    ("decsion" "decision" nil :count 0)
    ("definately" "definitely" nil :count 13)
    ("dyanmic" "dynamic" nil :count 0)
    ("editted" "edited" nil :count 0)
    ("excpetion" "exception" nil :count 0)
    ("existance" "existence" nil :count 0)
    ("filepath" "file path" nil :count 0)
    ("filepicker" "FilePicker" nil :count 3)
    ("fivespair" "Fives Pair" nil :count 0)
    ("hardcoded" "hard coded" nil :count 2)
    ("independant" "independent" nil :count 1)
    ("langauge" "language" nil :count 0)
    ("marijhuana" "Marijuana" nil :count 0)
    ("permisions" "permissions" nil :count 0)
    ("reciept" "receipt" nil :count 2)
    ("retrospecitive" "retrospective" nil :count 0)
    ("separete" "separate" nil :count 0)
    ("signup" "sign-up" nil :count 6)
    ("standup" "stand-up" nil :count 32)
    ("themed" "themed" nil :count 0)
    ("tia" "Thanks in advance" nil :count 149)
    ("tomororw" "tomorrow" nil :count 1)
    ("unecessary" "unnecessary" nil :count 0)
   ))

